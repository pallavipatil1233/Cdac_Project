package com.rentalcar.pojos;

import java.time.LocalDate;

import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Booking {
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @ManyToOne
    @JoinColumn(name = "customer_id", nullable = false)
    private Customer customer;
    
    @ManyToOne
    @JoinColumn(name = "car_id", nullable = false)
    private Car car;
    
    private LocalDate startDate;
    
    private LocalDate endDate;
    
    @Enumerated(EnumType.STRING)
    private BookingStatus status = BookingStatus.CONFIRMED;

    public enum BookingStatus {
        PENDING, CONFIRMED, COMPLETED, CANCELED
    }
    
    // Method to update car status when booking is created or completed
    public void updateCarStatusOnBooking() {
        if (this.status == BookingStatus.CONFIRMED) {
            this.car.setStatus(Car.CarStatus.BOOKED);
        } else if (this.status == BookingStatus.COMPLETED || this.status == BookingStatus.CANCELED) {
            this.car.setStatus(Car.CarStatus.AVAILABLE);
        }
    }
}
